# TODO: Change projects to use poetry instead of pipenv
- name: Install system python packages
  pip:
    state: latest
    executable: pip
    name: 
      - jedi
      - pipenv
      - virtualenv
      - virtualenvwrapper

- name: Link pyrc file
  become: no
  file:
    state: link
    src: "{{role_path}}/files/pyrc.py"
    dest: "{{ lookup('env','HOME') }}/.pyrc.py"

- name: Link virtualenv and pipenv bash configurations
  become: no
  file:
    state: link
    src: "{{role_path}}/files/bashrc/python.sh"
    dest: "{{ lookup('env','HOME') }}/.bashrc.d/python.sh"
    force: yes

- name: Get pipenv bash completion
  become: "{{ ansible_distribution == 'Ubuntu' }}"
  shell: "pipenv --completion > {{ bash.completion_dir }}/pipenv.sh"
  args: 
    executable: '{{ bash.executable }}' # TODO: Get dynamically 

- name: Clone pyenv
  become: no
  git:
    repo: https://github.com/pyenv/pyenv.git
    dest: "{{ lookup('env', 'HOME') }}/applications/pyenv"
    depth: 1

- name: Clone pyenv plugins
  become: no
  git:
    repo: "https://github.com/pyenv/{{ item }}.git"
    dest: "{{ lookup('env', 'HOME') }}/applications/pyenv/plugins/{{ item }}"
    depth: 1
  with_items: 
    - pyenv-doctor
    - pyenv-installer
    - pyenv-update
    - pyenv-virtualenv
    - pyenv-which-ext

- name: Link pyenv bash configuration
  become: no
  file:
    state: link
    src: "{{role_path}}/files/bashrc/pyenv.sh"
    dest: "{{ lookup('env','HOME') }}/.bashrc.d/pyenv.sh"
    force: yes
